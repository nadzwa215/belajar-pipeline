name: Advanced CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Show project structure
        run: |
          echo "Ì≥Å Project Structure:"
          ls -la
          echo ""
          echo "Ìº≥ Important files:"
          find . -name "*.html" -o -name "*.yaml" -o -name "*.yml" -o -name "Dockerfile" -o -name "*.css" | grep -v ".git"

      - name: Validate HTML files
        run: |
          echo "Ì¥ç Validating HTML files..."
          for file in *.html; do
            if [ -f "$file" ]; then
              echo "‚úÖ $file exists"
            fi
          done

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python for Sphinx
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Sphinx
        run: |
          python -m pip install --upgrade pip
          pip install sphinx
          echo "‚úÖ Sphinx installed"

      - name: Test Sphinx configuration
        run: |
          if [ -f "rspinx.conf" ]; then
            echo "‚úÖ rspinx.conf found"
            cat rspinx.conf
          else
            echo "‚ö†Ô∏è rspinx.conf not found"
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Minikube Kubernetes
        uses: manusa/actions-setup-minikube@v2.8.0
        with:
          minikube version: 'v1.32.0'
          kubernetes version: 'v1.28.0'

      - name: Verify Kubernetes cluster
        run: |
          echo "Ì¥ß Setting up Kubernetes..."
          kubectl cluster-info
          kubectl get nodes
          echo "‚úÖ Kubernetes is ready!"

      - name: Deploy applications
        run: |
          echo "Ì∫Ä Deploying applications..."
          
          # Deploy first-app if exists
          if [ -f "first-app.yaml" ]; then
            echo "Ì≥Ñ Deploying first-app.yaml..."
            kubectl apply -f first-app.yaml
            sleep 10
            kubectl get pods
          else
            echo "‚ö†Ô∏è first-app.yaml not found"
          fi

          # Deploy test deployment
          echo "Ì≥¶ Deploying test application..."
          kubectl create deployment test-app --image=nginx:alpine --replicas=2
          kubectl expose deployment test-app --port=80 --type=ClusterIP
          
          echo "Ì≥ä Final status:"
          kubectl get all

  success:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Pipeline completed
        run: |
          echo "Ìæâ PIPELINE BERHASIL!"
          echo "‚úÖ Tests passed"
          echo "‚úÖ Build completed" 
          echo "‚úÖ Deployment successful"
          echo "Ì∫Ä Your CI/CD pipeline is working!"
